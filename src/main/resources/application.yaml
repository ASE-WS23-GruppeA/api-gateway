server.port: 8443

spring.application.name: api-gateway

app:
  auth-server: localhost

spring:
  cloud:
    gateway:
      routes:
        - id: oauth2-server
          uri: http://localhost:9999
          predicates:
            - Path=/oauth2/**

        - id: oauth2-login
          uri: http://localhost:9999
          predicates:
            - Path=/login/**

        - id: oauth2-error
          uri: http://localhost:9999
          predicates:
            - Path=/error/**

        # todo - just a testing route, remove
        - id: host_route_200
          uri: http://httpstat.us
          predicates:
            - Host=i.feel.lucky:8080
            - Path=/headerrouting/**
          filters:
            - SetPath=/200

        - id: user-service
          uri: http://localhost:8081
          predicates:
            #            - Path=/api/users/**
            - Path=/api/auth/**

        - id: analytics-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/analytics/**

        - id: workout-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/workouts/**

        - id: exercise-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/exercises/**

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${app.auth-server}:9999

management:
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
  endpoints:
    jmx:
      exposure:
        include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

---
spring.config.activate.on-profile: docker

app:
  auth-server: authorization-server